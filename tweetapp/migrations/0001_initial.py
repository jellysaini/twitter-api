# Generated by Django 3.2 on 2022-06-10 05:15

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlgorandStandardAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField(default=100, help_text='The total number of base units of the asset to create. This number cannot be changed.', validators=[django.core.validators.MinValueValidator(1, message='%(value)s is not a Valid Total Number.')])),
                ('decimals', models.IntegerField(default=0, help_text='The number of digits to use after the decimal point when displaying the asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in tenths. If 2, the base unit of the asset is in hundredths, if 3, the base unit of the asset is in thousandths, and so on up to 19 decimal places', validators=[django.core.validators.MinValueValidator(0, message='%(value)s is not a Decimal place Number.'), django.core.validators.MaxValueValidator(19, message='%(value)s is not a Decimal place Number.')])),
                ('default_frozen', models.BooleanField(default=False, help_text='True to freeze holdings for this asset by default.')),
                ('unit_name', models.CharField(default='AR', help_text='The name of a unit of this asset. Supplied on creation. Max size is 8 bytes. Example: USDT', max_length=64)),
                ('asset_name', models.CharField(default='Authentium Asset', help_text='The name of the asset. Supplied on creation. Max size is 32 bytes. Example: Tether', max_length=128)),
                ('note', models.CharField(default='This is an Authentium Reward Asset', help_text='Specifies a note about the asset.', max_length=512)),
                ('url', models.URLField(blank=True, default='https://authentium.io/images/footer-logo.png', help_text='Specifies a URL where more information about the asset can be retrieved. Max size is 96 bytes.')),
                ('creator_address', models.CharField(blank=True, default='W43EYYN6H3BMWCJNRFHPPO3QKO2LPBBAK4OVDOTZMEE4YY3TQ4GQ7HYFNU', help_text='The address of the account that is used for the creation of the asset.', max_length=128)),
                ('creator_private_key', models.CharField(blank=True, default='VCRuiYseoqkKH9JlxCnMDTq29KFXb2Y/ejPCysWyb/m3Nkxhvj7CywktiU73u3BTtLeEIFcdUbp5YQnMY3OHDQ==', help_text='The Private key of the account that is used for the creation of the asset.', max_length=128)),
                ('manager', models.CharField(blank=True, default='W43EYYN6H3BMWCJNRFHPPO3QKO2LPBBAK4OVDOTZMEE4YY3TQ4GQ7HYFNU', help_text='The address of the account that can manage the configuration of the asset and destroy it.', max_length=128)),
                ('reserve', models.CharField(blank=True, default='W43EYYN6H3BMWCJNRFHPPO3QKO2LPBBAK4OVDOTZMEE4YY3TQ4GQ7HYFNU', help_text='The address of the account that holds the reserve (non-minted) units of the asset. This address has no specific authority in the protocol itself. It is used in the case where you want to signal to holders of your asset that the non-minted units of the asset reside in an account that is different from the default creator account (the sender).', max_length=128)),
                ('freeze', models.CharField(blank=True, default='W43EYYN6H3BMWCJNRFHPPO3QKO2LPBBAK4OVDOTZMEE4YY3TQ4GQ7HYFNU', help_text='The address of the account used to freeze holdings of this asset. If empty, freezing is not permitted.', max_length=128)),
                ('clawback', models.CharField(blank=True, default='W43EYYN6H3BMWCJNRFHPPO3QKO2LPBBAK4OVDOTZMEE4YY3TQ4GQ7HYFNU', help_text='The address of the account that can clawback holdings of this asset. If empty, clawback is not permitted.', max_length=128)),
                ('asa_id', models.IntegerField(blank=True)),
                ('txn_id', models.CharField(blank=True, max_length=128)),
            ],
            options={
                'verbose_name': 'Algorand Standard Asset',
                'verbose_name_plural': 'Algorand Standard Assets',
                'db_table': 'asa',
            },
        ),
        migrations.CreateModel(
            name='ReTweetUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveBigIntegerField()),
                ('name', models.CharField(max_length=128)),
                ('screen_name', models.CharField(max_length=128)),
                ('location', models.CharField(blank=True, max_length=512)),
                ('profile_image', models.URLField(blank=True)),
                ('created_at', models.DateTimeField()),
                ('followers_count', models.PositiveIntegerField()),
                ('lang', models.CharField(blank=True, max_length=50)),
                ('notifications', models.BooleanField()),
                ('description', models.CharField(max_length=512)),
                ('private_key', models.CharField(blank=True, max_length=128)),
                ('public_address', models.CharField(blank=True, max_length=128)),
                ('mnemonic', models.CharField(blank=True, max_length=512)),
                ('eligible', models.BooleanField(default=False)),
                ('rewarded', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'ReTweet User',
                'verbose_name_plural': 'ReTweet Users',
                'db_table': 're_tweet_user',
            },
        ),
    ]
